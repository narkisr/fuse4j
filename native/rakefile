# see http://tinyurl.com/bvql7yp  
require 'rake/clean'
require_relative 'rake-flags/detection'
require_relative 'packaging/native'

FS_EXEC = "javafs" 
LIBNAME = FS_EXEC
LIBFILE = "lib#{LIBNAME}.a" 
LIB_SO='libjavafs.so'

SRC = FileList['**/*.c']
OBJDIR = 'obj'
OBJS = SRC.collect { |fn| File.join(OBJDIR, File.basename(fn).ext('o')) } # all the object files that we need to create
CLEAN.include(OBJS, OBJDIR, LIB_SO,FS_EXEC)
CLOBBER.include(FS_EXEC)

task :default => [:build]

task :build => [FS_EXEC]


file FS_EXEC => [LIBFILE] do
  sh "gcc -o #{FS_EXEC} #{OBJS} #{CFLAGS} #{LDFLAGS} #{LDPATH}"
end

file LIBFILE => OBJS do
  sh "gcc -shared -o #{LIB_SO} #{OBJS} #{LDFLAGS} #{LDPATH}"
end

directory OBJDIR

rule '.o' => lambda{ |objfile| find_source(objfile) } do |t|
  Task[OBJDIR].invoke
  sh "gcc -c #{CFLAGS} #{INCLUDES} #{t.source} -o #{t.name} "
end

def find_source(objfile)
  base = File.basename(objfile, '.o')
  SRC.find { |s| File.basename(s, '.c') == base }
end

